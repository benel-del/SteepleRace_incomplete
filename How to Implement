*****
track을 미리 생성하지 말고, player가 portal-A와 충돌하면 그때 다음 track을 load?Active?하여 생성

* ver.trac Ative
*****

[Hierarchy]
- [x] Directional Light
- [ ] ScriptObject : EmptyObject. InitScene.cs, changeWeather, Start.cs
- [x] player : rigidbody, rotation-freeze, PlayerMove.cs, PlayerCollision.cs
    - [x] Main Camera
    - [x] time : UI text
    - [x] distance : UI text
    - [x] speed : UI text
    - [x] weather : UI text
    - [x] weatherEffect : UI text
    - [ ] start : UI text
    - [x] result : UI text, "Game success" or "Gane Failed"
- [ ] track 1 : createStone.cs
    - [x] track : prefab
    - [ ] hurdle(n) : rigidbody, prefab
- [ ] track 2
    - [x] track : prefab
    - [ ] stone : Resources
- [ ] track 3(2)
    - [x] board :
    - [ ] portal-C
- [ ] track 4
    - [x] track : prefab
    - [ ] stick(n) : prefab, moveStick.cs
    - [ ] end Point
        - [ ] GoalLine: rigidbody

- [x] portal-A
- [x] portal-B
- [x] Gsun : Resources
    - [x] heat_haze : particle
- [x] Gcloud : Resources
    - [x] cloud : Resources
- [x] Grain : Resources
    - [x] darkCloud : Resources
    - [x] rain : particle
- [x] Gsnow : Resources
    - [x] darkCloud : Resources
    - [x] snow : particle
    - [x] snow_set : Resources
    - [x] ice : Resources

* start point  = portal-B
* end point = portal-A

[Resources]
- [ ] stone : Prefab, rigidbody, deleteStone.cs
- [x] portalEffect : Particle System
- [x] weather/Gsun : GameObjacet
- [x] weather/Gcloud : GameObject, createCloud.cs
- [x] weather/Grain : GameObject, createRain.cs
- [x] weather/Gsnow : GameObject, createSnow.cs
- [x] cloud : prefab, deleteCloud.cs, moveCloud.cs
- [x] darkCloud : prefab, deleteRain.cs, moveCloud.cs
- [x] snow_set : prefab, deleteSnow.cs
- [x] ice : prefab, deleteSnow.cs



[Scripts]
- [x] PlayerMove.cs : Player 이동
    :: Player
- [x] InitScene.cs : timer/distance 출력, game result 로드
    :: ScriptObject
- [x] PlayerCollision.cs : 충돌 후 player 상태 변화(speed, notMoveTime) + sound
    :: player
- [ ] createStone.cs : stone 자동 생성
    :: track 1
    - start()
        stone = Resources.Load("stone")
        startCoroutine(createStone)
    - IEnumerator createStone() // InvokeRepeating은 active여부와 관계없이 계속 반복
        while(true)
            x = Random.Range(-12, 12)
            z = Random.Range(-20, 20)
            Instantiate(stone, new Vector3(x*2.0f, 30, z*10.0f)), Quaternion.identity)
            yeild return null
    - public :
    - private : GameObject stone

- [ ] deleteStone.cs : stone 소멸, Collision sound
    :: stone
    - OnCollisionEnter(Collision other)
        stone.Play()
        Destroy(gameObject)
    - public : AudioSource stone
    - private : 

- [ ] moveStick.cs : stick의 움직임
    :: stick
    - WaitForSeconds(Random.Range(0,2))
    - while(true)
        GetComponent<Rigidbody>().AddForce(transform.left * 400)
        WaitForSeconds(3)
        GetComponent<Rigidbody>().AddForce(transform.right * 400)
        WaitForSeconds(3)
    - public : 
    - private : 

- [x] changeWeather.cs : 날씨 변화, 날씨 영향
    :: ScriptObject
- [x] createCloud.cs : 날씨가 Cloud일 경우, 관련 asset 자동 생성
    :: Gcloud
- [x] deleteCloud.cs : 날씨가 Cloud가 아닐 경우 관련 asset 자동 소멸
    :: cloud
- [x] createRain.cs : 날씨가 Rain일 경우, 관련 asset 자동 생성 
    :: Grain
- [x] deleteRain.cs : 날씨가 Rain이 아닐 경우 관련 asset 자동 소멸
    :: darkCloud
- [x] createSnow.cs : 날씨가 Snow일 경우, 관련 asset 자동 생성 
    :: Gsnow
- [x] moveCloud.cs : 구름, 먹구름 이동
    :: cloud, darkCloud
- [x] deleteSnow.cs : 날씨가 Snow가 아닐 경우 관련 asset 자동 소멸
    :: snow_set, ice
- [ ] Start.cs : 게임 시작 카운트다운
    :: ScriptObject
    - player.GetComponent<Collision>().notMove = 5;
    - start.SetActive(true)
    - if(!(++count % 50) && player.GetComponent<Collision>().notMove)
        if(player.GetComponent<Collision>().notMove > 1)
            start.GetComponent<Text>.text = (player.GetComponent<Collision>().notMove-- - 2) + ""
        else
            start.GetComponent<Text>.text = "땅!"
        start.Play()
    - else if(!player.GetComponent<Collision>().notMove)
        start.SetActive(false)
    - public : AudioSource start, GameObject start, GameObject player
    - private : int count