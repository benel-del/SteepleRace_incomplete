*****
track을 미리 생성하지 말고, player가 portal-A와 충돌하면 그때 다음 track을 load?Active?하여 생성

* ver.trac Ative
*****

[Hierarchy]
- [x] Directional Light
- [ ] ScriptObject : MainScript.cs, changeWeather, Start.cs
- [ ] player : rigidbody, rotation-freeze, PlayerMove.cs, PlayerCollision.cs, changeStaticFriction.cs
    - [x] Main Camera
    - [ ] time : 3D text
    - [ ] distance : 3D text
    - [ ] start : 3D text
    - [ ] result1 : Resources
    - [ ] result2 : Resources
- [ ] track 1 : stoneCreate.cs
    - [x] track : prefab
    - [ ] hurdle(n) : rigidbody, prefab
- [ ] track 2
    - [x] track : prefab
    - [ ] stone : Resources
- [ ] track 3(2)
    - [x] board :
    - [ ] portal-C = portal-A
- [ ] track 4
    - [x] track : prefab
    - [ ] stick(n) : rigidbody, prefab
    - [ ] goalLine
- [x] portal-A
- [x] portal-B
- [x] Gsun : Resources
    - [x] heat_haze : particle
- [x] Gcloud : Resources
    - [x] cloud : Resources
- [x] Grain : Resources
    - [x] darkCloud : Resources
    - [x] rain : particle
- [x] Gsnow : Resources
    - [x] darkCloud : Resources
    - [x] snow : particle
    - [x] snow_set : Resources
    - [x] ice : Resources

* start point  = portal-B
* end point = portal-A

[Resources]
- [ ] result1 : 3D text, "Game success"
- [ ] result2 : 3D text, "Game Failed"
- [ ] stone : Prefab, rigidbody, deleteStone.cs
- [x] portalEffect : Particle System
- [x] weather/Gsun : GameObjacet
- [x] weather/Gcloud : GameObject, createCloud.cs
- [x] weather/Grain : GameObject, createRain.cs
- [x] weather/Gsnow : GameObject, createSnow.cs
- [x] cloud : prefab, deleteCloud.cs, moveCloud.cs
- [x] darkCloud : prefab, deleteRain.cs, moveCloud.cs
- [x] snow_set : prefab, deleteSnow.cs
- [x] ice : prefab, deleteSnow.cs



[Scripts]
- [x] PlayerMove.cs : 게임 종료 전까지 Player 이동
    :: Player
    - if(GameObject.FindWithTag("result") && gameObject.GetComponent<PlayerCollision>().notMove == 0)
        if(transform.position.y < -1)
            falling.Play()
        else
            if(Input.GetKey(KeyCode.Space))
                if(transform.position.y < 0.5)
                    GetComponent<Rigidbody>().AddForce(Vector3.up * jump))
            if(Input.GetKey(KeyCode.UpArrow))
                transform.Translate(Vector3.forward * speed * Time.deltaTime)
            if(Input.GetKey(KeyCode.LeftArrow))
                if(transform.position.x >= maxLeft) ...
            if(Input.GetKey(KeyCode.RightArrow))
                if(transform.position.x <= maxRight)    ...
    - public : int speed, float jump, AudioSource falling
    - private : 

- [ ] MainScript.cs : timer, distance, game result
    :: ScriptObject
    - start()
        distance = trackLength * 4
        limit_time = ...
    - getDistance() // in Update()
        if(GameObjacet.Find("track 1").activeSelf == true)
            distance = trackLength * 4 - player.position.z
        else if(GameObjacet.Find("track 2").activeSelf == true)
            distance = trackLength * 3 - player.position.z
        else if(GameObjacet.Find("track 3").activeSelf == true)
            distance = trackLength * 2 - player.position.z
        else
            distance = trackLength * 1 - player.position.z
        distance.GetComponent<Text>.text = distance + "m"
    - Timer()   // in Update()
        if(!distance)  // player position == end point
            GameObjacet.Find("result1").SetActive(true)
        else
            if(!limit_time) // time out
                GameObjacet.Find("result2").SetActive(true)
            else if(!(++count % 50))
                time.GetComponent<Text>.text = --limit_time + "초"
                if(player.GetComponent<Collision>().notMove)
                    player.GetComponent<Collision>().notMove--
    - public : int trackLength(500), float distance, GameObjacet player, GameObjacet distance, GameObjacet time
    - private : int count(0), int limit_time(60)

- [x] PlayerCollision.cs : 충돌 후 player 상태 변화(speed, notMoveTime) + sound
    :: player
    - effect = Resources.Load("particleEffect")
    - OnCollisionEnter(Collision other)
        if(other.gameObject.name == "board")
            GetComponent<PlayerMove>().jump = 30f
            GetComponent<PlayerMove>().speed = 5
            wind.Play()
        else if(other.gameObject.name == "ice")
            GetComponent<PlayerMove>().jump = 30f
            GetComponent<PlayerMove>().speed = 4
        else if(other.gameObject.name == "snow_set")
            GetComponent<PlayerMove>().speed = 4
            snow.Play()
        else
            GetComponent<PlayerMove>().jump = initJump
            GetComponent<PlayerMove>().speed = initSpeed
            if(other.gameObject.name == "hurdle")
                notMove = notMoveTime
                hurdle.Play()
            if(other.gameObject.name == "stone")
                notMove = notMoveTime
            if(other.gameObject.name == "stick")
                notMove = notMoveTime
                stick.Play()
            if(other.gameObject.name == "ice")
                notMove = notMoveTime
            if(other.gameObject.name == "portal-C")
                transform.position = portalP.GetComponent<Transform>().position
            if(other.gameObject.name== "portal-A")
                if(track1.activeSelf)
                    track1.SetActive(false)
                    track2.SetActive(true)
                else if(track2.activeSelf)
                    track2.SetActive(false)
                    track3.SetActive(true)
                else if(track3.activeSelf)
                    track3.SetActive(false)
                    portalP.SetActive(false)
                    track4.SetActive(true)
                transform.position = portalP.GetComponent<Transform>().position
                portal.Play()
            if(other.gameObject.name == "portal-B")
                instance = Instantiate(effect, new Vector3(transform.position.x, 0.5f, transform.position.z), Quaternion.Euler(-90, 0, 0))
                Destroy(instance, 3f)
    - OnCollisionStay(Collision other)
        if(other.gameObject.name == "board")
            transform.position = new Vector3(transform.position.x + Random.Range(-5, 5) * 0.05f, transform.position.y, transform.position.z)
    - public : int notMove, AudioSource wind, hurdle, stick, snow, portal, GameObject portalP
    - private : int initSpeed, float initJump, int notMoveTime, GameObject instance, GameObject effect

- [ ] createStone.cs : stone 생성
    :: track 1
    - start()
        stone = Resources.Load("stone")
        startCoroutine(createStone)
    - IEnumerator createStone() // InvokeRepeating은 active여부와 관계없이 계속 반복
        while(true)
            x = Random.Range(-12, 12)
            z = Random.Range(-20, 20)
            Instantiate(stone, new Vector3(x*2.0f, 30, z*10.0f)), Quaternion.identity)
            yeild return null
    - public :
    - private : GameObject stone

- [ ] deleteStone.cs : stone 소멸, Collision sound
    :: stone
    - OnCollisionEnter(Collision other)
        stone.Play()
        Destroy(gameObject)
    - public : AudioSource stone
    - private : 

- [ ] stickMove.cs : stick의 움직임
    :: stick
    - WaitForSeconds(Random.Range(0,2))
    - while(true)
        GetComponent<Rigidbody>().AddForce(transform.left * 400)
        WaitForSeconds(3)
        GetComponent<Rigidbody>().AddForce(transform.right * 400)
        WaitForSeconds(3)
    - public : 
    - private : 

- [x] changeWeather.cs : 날씨 변화, 조명 밝기 조절
    :: ScriptObject
    - instance = Resources.LoadAll("weather")   // Gsun, Gcloud, Grain, Gsnow
    - pos = new Vector3(0, 150, 0)
    - while(GameObject.FindWithTag("result") == null)
        int rand = Random.Range(0,4)
        switch(rand)
            case 0: // Gsun
                instance1 = (GameObject) Instantiate(instance[0] as GameObject, new Vector3(0, 0, 0), Quaternion.identity)
                player.GetComponent<PlayerMove>().speed -= 10
                sun.Play()
                new WaitForSeconds(15)
                player.GetComponent<PlayerMove>().speed += 10
            case 1: // Gcloud
                instance1 = Instantiate(instance[1], pos, Quaternion.identity)
                cloud.Play()
                new WaitForSeconds(15)
            case 2: // Grain
                dl.GetComponent<Light>().inten
                instance1 = Instantiate(instance[2], pos, Quaternion.identity)
                player.GetComponent<Rigidbody>().drag += 10
                rain.Play()
                new WaitForSeconds(15)
                player.GetComponent<Rigidbody>().drag -= 10
            case 3: // Gsnow
                instance1 = Instantiate(instance[3], pos, Quaternion.identity)
                player.GetComponent<PlayerMove>().speed -= 5
                player.transform.Translate(Vector3.left * Random.Range(-1,1) * Time.deltaTime);
                snow.Play()
                new WaitForSeconds(15)
                player.GetComponent<PlayerMove>().speed += 5
        Destroy(instance1)
    - public : GameObject player, AudioSource sun, cloud, rain, snow, Light dl
    - private : GameObject instance[4], GameObject instance1, Vector3 pos

- [x] createCloud.cs : 구름 생성
    :: Gcloud
    - cloud = Resources.Load("cloud") as GameObject;
    - for(int i = 0; i < 20; i++)
        x = Random.Range(-10, 10)
        z = Random.Range(-8, 20)
        Instantiate(cloud, new Vector3(x*30.0f, 200, z*30.0f), Quaternion.identity)
    - public : 
    - private : float x, z, GameObject cloud

- [x] deleteCloud.cs : 구름 소멸
    :: cloud
    - if(!GameObject.Find("Gcloud"))
        Destroy(gameObject)
    - public :
    - private : 

- [x] createRain.cs : 먹구름 생성
    :: Grain
    - darkCloud = Resources.Load("darkCloud")
    - for(int i = 0; i < 60; i++)
        x = Random.Range(-25, 25)
        z = Random.Range(-7, 22)
        Instantiate(darkCloud, new Vector3(x*40.0f, 300, z*40.0f), Quaternion.identity)
    - public : 
    - private : float x, z, GameObject darkCloud

- [x] deleteRain.cs : 먹구름 소멸
    :: darkCloud
    - if(!GameObject.Find("Grain") && !GameObject.Find("Gsnow"))
        Destroy(gameObject)
    - public :
    - private : 

- [x] createSnow.cs : 먹구름, snow_set, ice 생성
    :: Gsnow
    - start()
        darkCloud = Resources.Load("darkCloud")
        ice = Resources.Load("ice")
        snow_set = Resources.Load("snow_set")
        for(i = 0; i < 150; i++)
            x = Random.Range(-9, -3)
            z = Random.Range(1, 10)
            Instantiate(darkCloud, new Vector3(x*10.0f, 0, z*10.0f), Quaternion.identity)
    - FixedUpdate()
        if(++count == 50)   // 1초 뒤에 생성
            CreateSub()
        if(count > 50 && !GameObject.FindWithTag("track") &&!GameObject.FindWithTag("snow_set"))
            CreateSub()
    - CreateSub()
        for(int i = 0; i < 15; i++)
            x = Random.Range(-10, 10)
            z = Random.Range(-23, 23)
            Instantiate(ice, new Vector3(x*2.0f, 0.02f, z*10.0f), Quaternion.identity)
        for(int i = 0; i < 80; i++)
            x = Random.Range(-10, 10)
            z = Random.Range(-23, 23)
            Instantiate(snow_set, new Vector3(x*2.0f, 0.02f, z*10.0f), Quaternion.identity)
    - public : 
    - private : float x, z, GameObjacet darkCloud, GameObjacet ice, GameObjacet snow_set, int count

- [x] moveCloud.cs : 구름, 먹구름 이동
    :: cloud, darkCloud
    - transform.Translate(Vector3.right * 5f * Time.deltaTime)
    - public : 
    - private :

- [x] deleteSnow.cs : snow_set, ice 소멸
    :: snow_set, ice
    - if(!GameObject.Find("Gsnow") || GameObject.FindWithTag("track"))  // track3
        Destroy(gameObject);
    - public : 
    - private : 

- [ ] Start.cs : 게임 시작 카운트다운
    :: ScriptObject
    - player.GetComponent<Collision>().notMove = 5;
    - start.SetActive(true)
    - if(!(++count % 50) && player.GetComponent<Collision>().notMove)
        if(player.GetComponent<Collision>().notMove > 1)
            start.GetComponent<Text>.text = (player.GetComponent<Collision>().notMove-- - 2) + ""
        else
            start.GetComponent<Text>.text = "땅!"
        start.Play()
    - else if(!player.GetComponent<Collision>().notMove)
        start.SetActive(false)
    - public : AudioSource start, GameObject start, GameObject player
    - private : int count